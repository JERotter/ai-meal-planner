// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PeriPeri.Persistence.Contexts;

#nullable disable

namespace PeriPeri.Persistence.Migrations.DomainEntityDb
{
    [DbContext(typeof(DomainEntityDbContext))]
    partial class DomainEntityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PeriPeri.Domain.Entities.AppEntities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal?>("Calories")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Carbs")
                        .HasColumnType("numeric");

                    b.Property<int?>("CookTimeMinutes")
                        .HasColumnType("integer");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<decimal?>("Fat")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Fiber")
                        .HasColumnType("numeric");

                    b.Property<string>("IngredientsJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InstructionsJson")
                        .HasColumnType("text");

                    b.Property<bool>("IsDairyFree")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGlutenFree")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHighProtein")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsKeto")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLowCarb")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPaleo")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVegan")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVegetarian")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("LastUpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int?>("PrepTimeMinutes")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Protein")
                        .HasColumnType("numeric");

                    b.Property<int?>("Servings")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Sodium")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Sugar")
                        .HasColumnType("numeric");

                    b.Property<string>("Tags")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Recipies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5718348e-983e-4091-a1fa-c38a957c34d5"),
                            CreatedBy = new Guid("c5187e52-f963-4960-a130-b71d1825f9ab"),
                            CreatedOn = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "A tasty and nostalgic breakfast!",
                            IngredientsJson = "Century eggs and Spam",
                            InstructionsJson = "Chop up and fry spam. Sprinkle onto halved century eggs and enjoy!",
                            IsDairyFree = true,
                            IsGlutenFree = false,
                            IsHighProtein = true,
                            IsKeto = true,
                            IsLowCarb = true,
                            IsPaleo = true,
                            IsVegan = false,
                            IsVegetarian = false,
                            LastUpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Green Eggs and Ham"
                        },
                        new
                        {
                            Id = new Guid("42ba20af-b004-4ef9-bdbb-bd4931d874ae"),
                            CreatedBy = new Guid("693e1cee-8d47-493d-8a89-8221f2e6bb21"),
                            CreatedOn = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Keto and low carb chicken alfredo.",
                            IngredientsJson = "Lean chicken breast, Rao's Alfredo sauce, zuchinni, butter, olive oil",
                            InstructionsJson = "Spiralize a medium zuchinni. Massage with olive oil and seasonings.Set aside. Sautee chicken in 2T butter. Place onto zoodles and toss with 1/4C alfredo sauce",
                            IsDairyFree = false,
                            IsGlutenFree = false,
                            IsHighProtein = true,
                            IsKeto = true,
                            IsLowCarb = true,
                            IsPaleo = true,
                            IsVegan = false,
                            IsVegetarian = false,
                            LastUpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Chicken Alfredo with Zoodles"
                        },
                        new
                        {
                            Id = new Guid("c3bc3531-eaa7-4221-9be7-3005f46c2e1f"),
                            CreatedBy = new Guid("6a808e59-21fc-4686-b3b8-2e93713bc284"),
                            CreatedOn = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "A cheap and delcious alternative to the Carnivore Bar. Each bar contains 3oz beef and 2.6T butter.",
                            IngredientsJson = "Lean ground beef, salted butter, dessicated beef liver(optional)",
                            InstructionsJson = "Cook beef completely. Drain and press dry with paper towels. Dehydrate beef at 165F for 4 hours.Pulverize dried beef into a fine powder and add beef liver powder. Melt one stick of butter. Combine ingredients and pour into silicone molds.Freeze for at least 4hrs.",
                            IsDairyFree = false,
                            IsGlutenFree = false,
                            IsHighProtein = true,
                            IsKeto = true,
                            IsLowCarb = true,
                            IsPaleo = true,
                            IsVegan = false,
                            IsVegetarian = false,
                            LastUpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Beef and Butter Bars"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
